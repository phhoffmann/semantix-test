{"version":3,"sources":["components/Page1/page1.js","components/Page2/page2.js","components/Sidebar/sidebar.js","components/Layout/layout.js","App.js","serviceWorker.js","index.js"],"names":["Page1","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","barData","labels","datasets","data","backgroundColor","barDataOptions","maintainAspectRatio","responsive","legend","display","scales","xAxes","gridLines","color","yAxes","ticks","beginAtZero","pieData","options","userPointStyle","pieDataOptions","boxWidth","usePointStyle","fetchBarData","fetchPieData","_this2","fetch","method","headers","Content-Type","then","res","json","barChartObj","_barChartObj$reduce","reduce","acc","item","push","label","value","setState","toConsumableArray","_this3","body","pieChartObj","console","log","_pieChartObj$reduce","_this$state","react_default","a","createElement","Fragment","className","id","es","Component","Page2","lineData","lineOptions","fetchLineData","fill","lineTension","lineColors","fetchChartData","fetchedData","dayDataLength","keys","forEach","key","index","dayData","length","objectSpread","borderColor","hourData","catch","error","Promise","resolve","reject","Sidebar","react_router_dom","to","activeClassName","react_router","path","component","App","_ref","children","Sidebar_sidebar","AppRouter","layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.176aaa29.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Bar, Pie } from \"react-chartjs-2\"\r\nimport 'chart.piecelabel.js'\r\nimport \"../styles.scss\"\r\n\r\nclass Page1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      barData: {\r\n        labels: [],\r\n        datasets: [{\r\n          data: [],\r\n          backgroundColor:\r\n            \"#03A9F4\"\r\n\r\n        }]\r\n      },\r\n\r\n      barDataOptions: {\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        legend: {\r\n          display: false,\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            gridLines: {\r\n              color: \"rgba(0, 0, 0, 0)\",\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            ticks: {\r\n              beginAtZero: true\r\n            },\r\n            gridLines: {\r\n              color: \"rgba(0, 0, 0, 0)\",\r\n            }\r\n          }]\r\n        }\r\n      },\r\n\r\n      pieData: {\r\n        labels: [],\r\n        datasets: [{\r\n          options: {\r\n            labels: {\r\n              userPointStyle: true\r\n            }\r\n          },\r\n          data: [],\r\n          backgroundColor: [\r\n            '#DBECF8',\r\n            '#2C82BE',\r\n            '#32B88B'\r\n          ]\r\n        }]\r\n      },\r\n\r\n      pieDataOptions: {\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        legend: {\r\n          display: true,\r\n          labels: {\r\n            boxWidth: 8,\r\n            usePointStyle: true,\r\n          }\r\n        },\r\n      },\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBarData();\r\n    this.fetchPieData();\r\n  }\r\n\r\n  fetchBarData() {\r\n    const url = \"https://private-afe609-testefront.apiary-mock.com/anual-result\"\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    })\r\n      .then(res => res.json())\r\n      .then(barChartObj => {\r\n        const { labels, data } = barChartObj.reduce((acc, item) => {\r\n          acc.labels.push(item.label);\r\n          acc.data.push(item.value);\r\n          return acc\r\n        },\r\n          {\r\n            labels: [],\r\n            data: []\r\n          }\r\n        )\r\n        this.setState({\r\n          barData: {\r\n            labels: [...labels],\r\n            datasets: [{\r\n              data: [...data],\r\n            }]\r\n          },\r\n        })\r\n      })\r\n  }\r\n\r\n  fetchPieData() {\r\n    const { body } = this.state;\r\n    const url = \"https://private-afe609-testefront.apiary-mock.com/anual-percentage\"\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    })\r\n      .then(res => res.json())\r\n      .then(pieChartObj => {\r\n        console.log('pieChartObj', pieChartObj)\r\n        const { labels, data } = pieChartObj.reduce((acc, item) => {\r\n          acc.labels.push(item.label);\r\n          acc.data.push(item.value);\r\n          return acc\r\n        },\r\n          {\r\n            labels: [],\r\n            data: []\r\n          }\r\n        )\r\n        this.setState({\r\n          pieData: {\r\n            labels: [...labels],\r\n            datasets: [{\r\n              data: [...data],\r\n              options: {\r\n                legend: {\r\n                  display: true\r\n                },\r\n              }\r\n            }]\r\n          },\r\n        })\r\n      }\r\n      )\r\n  }\r\n\r\n\r\n  render() {\r\n    const { barData, barDataOptions, pieDataOptions } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"container\" id=\"page1\">\r\n          <h1 className=\"page_title\">Page 1</h1>\r\n\r\n          <div className=\"bar-chart-container\">\r\n            <div className=\"bar-chart\">\r\n              <h3 className=\"bar-chart-title\">BARS CHART</h3>\r\n              <Bar\r\n                data={barData}\r\n                options={barDataOptions}\r\n              />\r\n            </div>\r\n\r\n\r\n            <div className=\"bar-chart\">\r\n              <h3 className=\"bar-chart-title\">PIE CHART</h3>\r\n              <Pie\r\n                data={this.state.pieData}\r\n                options={pieDataOptions}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Page1;\r\n","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"../styles.scss\";\r\n\r\nclass Page2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lineData: {\r\n        labels: [],\r\n        datasets: []\r\n      },\r\n      lineOptions: {\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        legend: {\r\n          display: true,\r\n          labels: {\r\n            boxWidth: 8,\r\n            usePointStyle: true,\r\n          }\r\n        },\r\n      },\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.fetchLineData();\r\n  }\r\n\r\n  fetchLineData() {\r\n    const lineOptions = {\r\n      fill: false,\r\n      lineTension: 0\r\n    };\r\n\r\n    const lineColors = [\"#b55be3\", \"#444c97\"];\r\n\r\n    this.fetchChartData()\r\n      .then(fetchedData => {\r\n        let dayDataLength = 0;\r\n\r\n        let lineData = this.state.lineData;\r\n\r\n        Object.keys(fetchedData).forEach((key, index) => {\r\n          let dayData = fetchedData[key];\r\n          dayDataLength = dayData.length;\r\n\r\n          lineData.datasets.push({\r\n            label: key,\r\n            data: [],\r\n            borderColor: lineColors[index],\r\n            ...lineOptions\r\n          });\r\n\r\n          dayData.forEach(hourData => {\r\n            if (lineData.labels.length < dayDataLength) {\r\n              lineData.labels.push(hourData.label);\r\n            }\r\n            lineData.datasets[index].data.push(hourData.value);\r\n          });\r\n        });\r\n\r\n        this.setState(lineData);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  fetchChartData() {\r\n    return new Promise((resolve, reject) => {\r\n      const url = \"https://private-afe609-testefront.apiary-mock.com/time-data\";\r\n      fetch(url, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n        .then(res => {\r\n          resolve(res.json());\r\n        })\r\n        .catch(error => {\r\n          reject(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container\" id=\"page2\">\r\n          <h1 className=\"page_title\">Page 2</h1>\r\n          \r\n          <div className=\"bar-chart-container\">\r\n            <div className=\"line-chart\">\r\n                <h3 className=\"bar-chart-title\">LINE CHART</h3>\r\n                <Line data={this.state.lineData} options={this.state.lineOptions} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Page2;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\r\nimport Page1 from \"../Page1/page1\"\r\nimport Page2 from \"../Page2/page2\"\r\nimport \"../../App.scss\"\r\nimport \"../Sidebar/sidebar.scss\"\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <Router>\r\n        <section className=\"sidebar-big\" id=\"sidebar\">\r\n          <h1 className=\"sidebar-big_title\">Semantix</h1>\r\n          <nav className=\"nav-group\">\r\n            <div>\r\n              <NavLink to=\"/page1\" className=\"nav-link\" activeClassName=\"active\">\r\n                <span id=\"page1-icon\" className=\"icon\" />\r\n                Page 1\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n              <NavLink to=\"/page2\" className=\"nav-link\" activeClassName=\"active\">\r\n                <span id=\"page2-icon\" className=\"icon\" />\r\n                Page 2\r\n          </NavLink>\r\n            </div>\r\n          </nav>\r\n        </section>\r\n\r\n        <Route path=\"/page1/\" component={Page1} />\r\n        <Route path=\"/page2/\" component={Page2} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport Sidebar from \"../Sidebar/sidebar\"\r\n\r\nconst App = ({ children }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <Sidebar />\r\n      </div>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport Layout from \"./components/Layout/layout\"\n\n\n\n\nfunction AppRouter() {\n  return (\n    <Layout />\n  );\n}\n\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}